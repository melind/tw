{"version":3,"sources":["services/userAPI/index.ts","store/reducer/signup-reducer.ts","store/reducer/login-reducer.ts","store/reducer/nav-reducer.ts","store/reducer/account-reducer.ts","store/reducer/index.ts","store/index.ts","services/movieAPI/index.ts","components/Nav/index.tsx","containers/Nav.ts","components/Home/index.tsx","components/Greeting/index.tsx","components/H/index.tsx","lib/validation.ts","components/Signup/index.tsx","containers/Signup.ts","components/Login/index.tsx","containers/Login.ts","components/Account/index.tsx","containers/Account.ts","components/Pseudo/index.tsx","containers/Pseudo.ts","lib/validationMail.ts","components/Mail/index.tsx","containers/Mail.ts","lib/validationPassword.ts","components/Password/index.tsx","containers/Password.ts","components/NotFoundPage/index.tsx","components/Admin/index.tsx","components/Load/index.tsx","components/Forbidden/index.tsx","components/Media/index.tsx","components/Genre/index.tsx","components/GenreTv/index.tsx","components/Mentions/index.tsx","components/PrivateRoute/index.tsx","components/PublicRoute/index.tsx","components/App/index.tsx","serviceWorker.js","index.tsx"],"names":["headers","API_URL","process","console","log","signupUser","formState","axios","post","qs","stringify","loginUser","defaults","withCredentials","logOut","get","isAuth","cookie","load","infoUser","updatePseudo","put","updateMail","updatePassword","isAdmin","deleteUser","delete","home","index","stateInitial","pseudo","mail","password","subscriber","signupSuccess","payload","type","signupError","reducer","state","action","error","loggedin","loginSuccess","loginError","loggedout","date","update","accountSuccess","accountError","updateSuccess","updateError","deleteSuccess","deleteError","rootReducer","combineReducers","signup","login","nav","account","store","createStore","applyMiddleware","reduxThunk","nowPlaying","genres","moviesByGenres","id","number","genresTv","tvShowsByGenres","media","search","Nav","onClick","init","useState","genre","setGenre","genreTv","setGenreTv","setSearch","searchMediaResult","setSearchMediaResult","a","movieAPI","then","res","data","catch","err","listGenres","searchMedia","results","searchMedias","show","film","document","getElementsByClassName","serie","acteur","style","display","useEffect","listOfGenres","listOfTvGenres","to","SubMenu","Menu","className","Item","src","alt","title","ItemGroup","map","result","key","target","name","method","onMouseOut","onMouseOver","placeholder","value","onChange","event","href","getElementById","header","media_type","original_name","userAPI","connect","dispatch","Home","nowMovie","setNowMovie","movie","moviePlaying","movies","poster_path","rel","Greeting","H","loading","setLoading","setTimeout","displayError","props","validate","presence","format","pattern","message","length","minimum","Signup","onSubmit","setFormState","handleChange","e","preventDefault","undefined","htmlFor","required","htmlType","getState","response","text","alert","keyValue","signUp","Login","Account","setSubscriber","slice","handleInit","onConfirm","success","okText","cancelText","user","Pseudo","accountPseudo","Mail","accountMail","Password","accountPassword","NotFoundPage","Admin","users","setUsers","list","handleDelete","usersList","_id","Load","Forbidden","redirect","setRedirect","Media","medias","setMedias","match","params","details","mediaDetails","backgroundImage","backgroundSize","Grid","Genres","setMovies","pages","setPages","page","setPage","genreMovies","moviesGenre","total_pages","moviesByGenreList","Meta","Card","current","total","GenresTv","tvShows","setTvShows","genreTvShows","tvShowGenre","tvShowsByGenreList","Mentions","PrivateRoute","Component","component","rest","render","PublicRoute","App","path","exact","Genre","GenreTv","Boolean","window","location","hostname","ReactDOM","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b6bf1736.chunk.js","sourcesContent":["  \nimport axios from 'axios';\nimport qs from 'qs';\nimport cookie from 'react-cookie';\nconst headers = {\n            'Content-Type': 'application/x-www-form-urlencoded',\n            'Accept': 'application/json'\n};\n\nconst API_URL = process.env.REACT_APP_API_URL;\nconsole.log(API_URL);\n\nexport default {\n\n    signupUser: (formState) => {\n        return axios.post( API_URL + '/signup', qs.stringify(formState), {headers: headers})\n        },\n\n    loginUser: (formState) => { \n        axios.defaults.withCredentials = true;\n        return axios.post( API_URL + '/login', qs.stringify(formState), {headers: headers})\n        },\n    \n    logOut: () => { \n        axios.defaults.withCredentials = true;\n        return axios.get( API_URL + '/logout')\n    },\n\n    isAuth: () => {\n        if (cookie.load('jwt'))\n        return true \n      },\n      \n    infoUser: () => { \n        axios.defaults.withCredentials = true;\n        return axios.get( API_URL + '/account')\n    }, \n\n    updatePseudo: (formState) => { \n        axios.defaults.withCredentials = true;\n        return axios.put( API_URL + '/updatePseudo', qs.stringify(formState), {headers: headers})\n    }, \n\n    updateMail: (formState) => { \n        axios.defaults.withCredentials = true;\n        return axios.put( API_URL + '/updateMail', qs.stringify(formState), {headers: headers})\n    },\n\n    updatePassword: (formState) => { \n        axios.defaults.withCredentials = true;\n        return axios.put( API_URL + '/updatePassword', qs.stringify(formState), {headers: headers})\n    },\n\n    isAdmin: () => { \n        axios.defaults.withCredentials = true;\n        return  axios.get( API_URL + '/admin')\n    },\n\n    deleteUser: () => { \n        axios.defaults.withCredentials = true;\n        return axios.delete( API_URL + '/deleteAccount', {headers: headers})\n    },\n\n    home: () => { \n        axios.defaults.withCredentials = true;\n        return axios.get( API_URL + '/home')\n    }, \n\n    index: () => { \n        return axios.get( API_URL + '/')\n    },\n\n}","\nimport userAPI from '../../services/userAPI';\n\nconst stateInitial = { \n    pseudo: '',\n    mail: '',\n    password: '',\n    subscriber: false,\n };\n\n export const SIGNUP_SUCCESS = \"SIGNUP_SUCCESS\";\n export const SIGNUP_ERROR = \"SIGNUP_ERROR\";\n export const INIT = \"INIT\";\n\nconst reducer = (state = stateInitial, action : {type: string, payload : any}) => {\n    switch(action.type){\n        case SIGNUP_SUCCESS: \n            return {\n                ...state, // = stateInitial\n                ...action.payload,// = overwrite stateInitial with data frop appli\n                subscriber: true,\n                error: false\n\n            }\n        case SIGNUP_ERROR:\n            return {\n                ...state,\n                subscriber: false,\n                error: \"Inscription non réussi\",\n\n            }\n        case INIT:\n            return {\n                ...state,\n                ...stateInitial,\n                subscriber:false,\n                error: false\n\n            }\n\n        default:\n            return state;\n    }\n}\n\n        /*-----------    redux thunk  -------------*/\n        // action creator which return function\nexport const signUp = (formState) => (dispatch, getState) => {\n    // name of the input\n    // collect user info of the stateInitial\n    // state.signup\n   const { signup } = getState();\n    // axios collect post info from the user via name input\n    return  userAPI.signupUser(formState)\n        .then( (res) => {\n            // inform my reducer this is a success \n            //and take data from response of auhtController.postSignup\n            \n            dispatch(signupSuccess(res.data));\n        })\n        .catch(err => {\n            // inform my reducer there is an error\n            if (err.response.data.text) {\n                alert(err.response.data.text);\n                }\n            else if (err.response.data.error.keyValue.pseudo || err.response.data.error.keyValue.mail) {\n                alert((err.response.data.error.keyValue.pseudo ||  err.response.data.error.keyValue.mail) + \" existe déjà!\");\n                }\n                else {\n\n                }\n \n            dispatch(signupError());\n        });\n};\n\n/*-----------    action creator  -------------*/\n// function that create actions (= payload = data from the application for the store = update stateInitial)\n\n\n\nexport const signupSuccess = (payload) => ({\n    type: SIGNUP_SUCCESS,\n    payload\n});\n\nexport const signupError = () => ({\n    type: SIGNUP_ERROR,\n});\n\nexport const init = () => ({\n    type: INIT\n});\nexport default reducer;","\nimport userAPI from '../../services/userAPI';\n\nconst stateInitial = { \n    pseudo: '',\n    password: '',\n    loggedin: false,\n    subscriber: true,\n    error: ''\n };\n\n export const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\n export const LOGIN_ERROR = \"LOGIN_ERROR\";\n export const INIT = \"INIT\";\n \nconst reducer = (state = stateInitial, action : {type: string, payload: any}) => {\n    switch(action.type){\n        case LOGIN_SUCCESS:\n            return {\n                ...state,// = stateInitial\n                ...action.payload,// = overwrite stateInitial with data from appli\n                loggedin: true,\n                subscriber: true,\n                error: false,\n\n            }\n        case LOGIN_ERROR:\n            return {\n                ...state,\n                loggedin: false,\n                subscriber: false,\n                error: \"Connexion échoué\",\n\n            }\n        case INIT:\n            return {\n                ...state,\n                ...stateInitial,\n                loggedin: false,\n                subscriber:false,\n                error: false\n\n            }\n\n        default:\n            return state;\n    }\n};\n        /*-----------    redux thunk  -------------*/\n        // action creator which return function\nexport const login = (formState) => (dispatch, getState) => {\n    // collect user info of the stateInitial\n    // state.login\n   // const { login } = getState();\n    // axios check post info from the user\n    return userAPI.loginUser(formState)\n        .then(res => {\n            // inform my reducer this is a success\n            //and take data from response of auhtController.postLogin\n            dispatch(loginSuccess(res.data));\n        })\n        .catch(err => {\n            // inform my reducer there is an error\n            if (err.response.data.text) {alert(err.response.data.text);}\n            dispatch(loginError());\n        })\n};\n/*-----------    action creator  -------------*/\n// function that create actions (= payload = data from the application for the store)\nexport const loginSuccess = (payload) => ({\n    type: LOGIN_SUCCESS,\n    payload\n});\n\nexport const loginError = () => ({\n    type: LOGIN_ERROR,\n});\n\nexport const init = () => ({\n    type: INIT\n});\n\n\nexport default reducer; ","\n\nconst stateInitial = { \n    loggedout: false\n };\n\n export const LOGOUT_SUCCESS = \"LOGOUT_SUCCESS\";\n export const LOGOUT_ERROR = \"LOGOUT_ERROR\";\n export const INIT = \"INIT\";\n\nconst reducer = (state = stateInitial, action: {type: string, payload : any}) => {\n    switch(action.type){\n        case LOGOUT_SUCCESS: \n            return {\n                ...state, \n                loggedout: true,\n                error: false\n\n            }\n        case LOGOUT_ERROR:\n            return {\n                ...state,\n                loggedout: false,\n                error: \"Déconnexion non réussi\",\n\n            }\n        case INIT:\n            return {\n                ...state,\n                ...stateInitial,\n                loggedout:false,\n                error: false\n\n            }\n        \n        default:\n            return state;\n    }\n}\n\n \n\n\n/*-----------    action creator  -------------*/\n// function that create actions (= payload = data from the application for the store = update stateInitial)\n\n\nexport const logoutSuccess = () => ({\n    type: LOGOUT_SUCCESS,\n});\n\nexport const logoutError = () => ({\n    type: LOGOUT_ERROR,\n});\n\nexport const init = () => ({\n    type: INIT\n});\n\nexport default reducer;","\nimport userAPI from '../../services/userAPI';\n\nconst stateInitial = { \n    pseudo: '',\n    mail: '',\n    password: '',\n    date: '',\n    update:'',\n };\n\n export const ACCOUNT_SUCCESS = \"ACCOUNT_SUCCESS\";\n export const ACCOUNT_ERROR = \"ACCOUNT_ERROR\";\n export const UPDATE_SUCCESS = \"UPDATE_SUCCESS\";\n export const UPDATE_ERROR = \"UPDATE_ERROR\";\n export const DELETE_SUCCESS = \"DELETE_SUCCESS\";\n export const DELETE_ERROR = \"DELETE_ERROR\";\n export const INIT = \"INIT\";\n\nconst reducer = (state = stateInitial, action : {type: string, payload : any}) => {\n    switch(action.type){\n        case ACCOUNT_SUCCESS: \n            return {\n                ...state, // = stateInitial\n                ...action.payload,// = overwrite stateInitial with data from appli\n                error: false\n\n            }\n        case ACCOUNT_ERROR:\n            return {\n                ...state,\n                error: \"affichage non réussi\",\n\n            }\n\n        case UPDATE_SUCCESS: \n            return {\n                ...state, \n                ...action.payload,\n                update: true,\n                error: false\n\n            }\n        case UPDATE_ERROR:\n            return {\n                ...state,\n                update:false,\n                error: \"mise à jour non réussi\",\n\n            }\n        case DELETE_SUCCESS: \n            return {\n                ...state, \n                ...stateInitial,\n                error: false\n\n            }\n        case DELETE_ERROR:\n            return {\n                ...state,\n                error: \"désinscription non réussi\",\n\n            }\n        case INIT: \n            return {\n                ...state, \n                ...stateInitial,\n                error: false\n\n            }\n        default:\n            return state;\n    }\n}\n\n        /*-----------    redux thunk  -------------*/\n        // action creator which return function\nexport const displayAccount = () => (dispatch, getState) => {\n    \n    // collect user info of the stateInitial\n    \n    const { account } = getState();\n    // collect user info\n    return  userAPI.infoUser()\n        .then( (res) => {\n            // inform my reducer this is a success \n            //and take data from response of accountController.displayAccount\n            \n            dispatch(accountSuccess(res.data.user));\n        })\n        .catch(err => {\n            // inform my reducer there is an error\n \n            dispatch(accountError());\n        });\n};\n\nexport const accountPseudo = (formState) => (dispatch, getState) => {\n    // name of the input\n    // collect user info of the stateInitial\n    \n    const { account } = getState();\n    // axios collect post info from the user via name input\n    return  userAPI.updatePseudo(formState)\n        .then( (res) => {\n            // inform my reducer this is a success \n            //and take data from response of accountController.updateAccount\n            \n            dispatch(updateSuccess(res.data));\n        })\n        .catch(err => {\n            // inform my reducer there is an error\n            if (err.response.data.error.keyValue.pseudo ) {\n                alert((err.response.data.error.keyValue.pseudo)  + \" existe déjà!\");};\n          \n            dispatch(updateError());\n        });\n};\n\nexport const accountMail = (formState) => (dispatch, getState) => {\n    // name of the input\n    // collect user info of the stateInitial\n    \n    const { account } = getState();\n    // axios collect post info from the user via name input\n    return  userAPI.updateMail(formState)\n        .then( (res) => {\n            // inform my reducer this is a success \n            //and take data from response of accountController.updateAccount\n            \n            dispatch(updateSuccess(res.data));\n        })\n        .catch(err => {\n            // inform my reducer there is an error\n      \n            if (err.response.data.error.keyValue.mail) {\n                alert((err.response.data.error.keyValue.mail) + \" existe déjà!\");};\n          \n            dispatch(updateError());\n        });\n};\n\n\nexport const accountPassword = (formState) => (dispatch, getState) => {\n    // name of the input\n    // collect user info of the stateInitial\n    \n    const { account } = getState();\n    // axios collect post info from the user via name input\n    return  userAPI.updatePassword(formState)\n        .then( (res) => {\n            // inform my reducer this is a success \n            //and take data from response of accountController.updateAccount\n            \n            dispatch(updateSuccess(res.data));\n        })\n        .catch(err => {\n            // inform my reducer there is an error\n          \n            dispatch(updateError());\n        });\n};\n\nexport const deleteAccount = () => (dispatch, getState) => {\n   \n    return  userAPI.deleteUser()\n        .then( (res) => {\n            // inform my reducer this is a success \n            \n            dispatch(deleteSuccess());\n        })\n        .catch(err => {\n            // inform my reducer there is an error\n            dispatch(deleteError());\n        });\n};\n/*-----------    action creator  -------------*/\n// function that create actions (= payload = data from the application for the store = update stateInitial)\n\n\n\nexport const accountSuccess = (payload) => ({\n    type: ACCOUNT_SUCCESS,\n    payload\n});\n\nexport const accountError = () => ({\n    type: ACCOUNT_ERROR\n});\n\nexport const updateSuccess = (payload) => ({\n    type: UPDATE_SUCCESS,\n    payload\n});\n\nexport const updateError = () => ({\n    type: UPDATE_ERROR\n});\n\n\nexport const deleteSuccess = () => ({\n    type: DELETE_SUCCESS\n});\n\nexport const deleteError = () => ({\n    type: DELETE_ERROR\n});\n\nexport const init = () => ({\n    type: INIT\n});\nexport default reducer;","import { combineReducers } from 'redux';\n\nimport signup from './signup-reducer';\nimport login from './login-reducer';\nimport nav from './nav-reducer';\nimport account from './account-reducer';\n\nconst rootReducer = combineReducers({\n    signup,\n    login,\n    nav,\n    account\n  \n});\n\n\nexport default rootReducer;","import { createStore, applyMiddleware} from 'redux';\nimport reduxThunk from 'redux-thunk';\nimport rootReducer from './reducer';\n\n\nconst store = createStore(rootReducer, applyMiddleware(reduxThunk));\n\nexport default store;","import axios from 'axios';\nimport qs from 'qs';\nconst headers = {\n            'Content-Type': 'application/x-www-form-urlencoded',\n            'Accept': 'application/json'\n};\n\nconst API_URL = process.env.REACT_APP_API_URL;\nconsole.log(API_URL);\n\nexport default {\n\n    nowPlaying: () => {\n        axios.defaults.withCredentials = true;\n        return axios.get( API_URL + '/nowplaying')\n        },\n\n    genres: () => {\n        axios.defaults.withCredentials = true;\n        return axios.get( API_URL + '/genresMovieList')\n        },    \n\n    moviesByGenres: (id,number) => {\n       axios.defaults.withCredentials = true;\n       return axios.get( API_URL + `/moviesByGenres/${id}/${number}`)\n       },  \n\n    genresTv: () => {\n       axios.defaults.withCredentials = true;\n       return axios.get( API_URL + '/genresTvShowList')\n       }, \n\n    tvShowsByGenres: (id,number) => {\n       axios.defaults.withCredentials = true;\n       return axios.get( API_URL + `/tvShowsByGenres/${id}/${number}`)\n       }, \n\n    media: (media, id) => {\n       axios.defaults.withCredentials = true;\n       return axios.get( API_URL + `/media/${media}/${id}`)\n       }, \n\n    search: (search) => {\n     axios.defaults.withCredentials = true;\n     return axios.post( API_URL + '/home', qs.stringify(search),{headers: headers})\n    \n     }, \n}","import React, {useState, useEffect} from 'react';\nimport './index.css';\nimport { Redirect, Link} from 'react-router-dom';\nimport userAPI from '../../services/userAPI';\nimport movieAPI from '../../services/movieAPI';\nimport {Menu, Input, List} from 'antd';\n\n\nconst Nav = ({loggedout, onClick, init}) => {\n\ninit();\n  \n\n  const logOut = () => {\n  userAPI.logOut();\n   onClick();\n\n  }\n  \n \n\n  const [genre, setGenre] = useState([]);\n  const [genreTv, setGenreTv] = useState([]);\n  const [search, setSearch] = useState(\"\");\n  const [searchMediaResult, setSearchMediaResult] = useState([]);\n\n  const handleChange = event => { \n        \n    setSearch(event.target.value); \n   \n    searchMedia(search);\n\n  }; \n\n/*------------------movie genres------------------------*/\n\n    async function listOfGenres() { \n       const listGenres = await movieAPI.genres()\n       .then(res => {\n          \n           return res.data;\n       })\n       .catch(err => {\n          \n       });\n       setGenre(listGenres.genres.genres);\n       \n       }\n   /*------------------tv shows genres------------------------*/\n\n    async function listOfTvGenres() { \n     const listGenres = await movieAPI.genresTv()\n     .then(res => {\n         \n         return res.data;\n     })\n     .catch(err => {\n        \n     });\n     setGenreTv(listGenres.genres.genres);\n   \n     }\n/*------------------ search bar ------------------------*/\n\n\n    async function searchMedia(search) { \n        \n     const searchMedias = await movieAPI.search({\"search\":search})\n     .then(res => {\n         \n         \n         return res.data.media.results;\n         \n     })\n     .catch(err => {\n         \n     });\n     setSearchMediaResult(searchMedias);\n\n     }\n \n\n/*------------------ search bar effect ------------------------*/\n  \n        const show = () => {\n            \n                const film = document.getElementsByClassName('selected')[0] as HTMLElement;\n                const serie = document.getElementsByClassName('selected')[1] as HTMLElement;\n                const acteur = document.getElementsByClassName('selected')[2] as HTMLElement;\n                const res = document.getElementsByClassName('res')[0] as HTMLElement;\n                film.style.display='block';serie.style.display='block';acteur.style.display='block';\n                res.style.display='block';\n        \n       };\n       const hide = () => {\n              \n                const film = document.getElementsByClassName('selected')[0] as HTMLElement;\n                const serie = document.getElementsByClassName('selected')[1] as HTMLElement;\n                const acteur = document.getElementsByClassName('selected')[2] as HTMLElement;\n                const res = document.getElementsByClassName('res')[0] as HTMLElement;\n                film.style.display='none';serie.style.display='none';acteur.style.display='none';\n                res.style.display='none';\n       };\n\n      \n       \n        const selectedFilm = event => {\n         if (document.getElementById('#film')) { \n        const selectedMovie = document.getElementById('#film')[0] as HTMLElement;\n         selectedMovie.style.display='block';\n\n        const selectedTv = document.getElementById('#serie')[0] as HTMLElement;\n        selectedTv.style.display='none';\n          }\n          \n      };\n      const selectedSerie = event => {\n         if( document.getElementById('#serie')){\n            const selectedTv = document.getElementById('#serie')[0] as HTMLElement\n            selectedTv.style.display='block';\n            const selectedMovie = document.getElementById('#film')[0] as HTMLElement\n            selectedMovie.style.display='none';\n           }\n      };\n\n       useEffect(() => {\n       listOfGenres(); listOfTvGenres(); \n       }, []); \n       useEffect(() => {\n        searchMedia(search);\n      }, [search]);\n\n\n\n  if(loggedout) return <Redirect to=\"/\" />\n\n  const { SubMenu } = Menu;\n\n    return (\n      <Menu className=\"nav\" >\n          \n        <Menu.Item className=\"oscar\">  \n                <Link to=\"/admin\" >< img  src=\"../../../images/oscar.png\" alt=\"un oscar avec des rouleaux de diapositives de film en arrière plan\" /></Link>\n        </Menu.Item>  \n       \n        \n            <SubMenu title=\"Film par genre\"  className=\"genres\" > \n                <Menu.ItemGroup className=\"genre\"> \n                    {genre.map((result) => \n                         <Menu.Item   key={result.id} >\n                             <Link   to={`/genre/${result.id}`} target=\"_parent\" key={result.id}>\n                                 {result.name} \n                             </Link>\n                          </Menu.Item >\n                    )}\n                </Menu.ItemGroup>\n            </SubMenu>\n   \n      \n            <SubMenu title=\"Série par genre\" className=\"genres\" > \n                 <Menu.ItemGroup className=\"genre\"> \n                    {genreTv.map((result) => \n                         <Menu.Item className=\"genre\" key={result.id}>\n                             <Link  to={`/genretv/${result.id}`} target=\"_parent\" key={result.id}>\n                                {result.name}\n                            </Link>\n                        </Menu.Item> \n                    )}\n                </Menu.ItemGroup>\n            </SubMenu>\n       \n         \n        <Menu className=\"search-container\">\n                <form  action=\"\" method=\"POST \">\n                    <div className=\"searchplace\"onMouseOut={hide} onClick={show} onMouseOver={show}>\n                        < img src=\"../../../images/projecteur.png\" alt=\"un projecteur de film\"/><Input placeholder=\"Recherche de films/séries/aceurs...\" value={search} onChange={handleChange} onClick={show}  />\n                    \n                        <div className=\"res\">\n                        <Menu className=\"selectoption\" >\n                        <a href=\"#film\"className=\"selected\"  onClick={selectedFilm} ><div >Film</div></a>\n                        <a href=\"#serie\"  className=\"selected\"  onClick={selectedSerie} ><div >Série</div></a>\n                        <a href=\"#actor\" className=\"selected\"  ><div>Acteur</div></a>\n                        </Menu>\n                       \n                         <List className=\"result\"  header=\"film\" id=\"film\"  >{searchMediaResult && searchMediaResult.map((result => \n                         result[\"media_type\"] === \"movie\" ? ( <Link  to={`/media/${result.media_type}/${result.id}`} target=\"_parent\" key={result.id}>\n                             <List.Item   className=\"li\">{result.title}</List.Item></Link>) : \"\"))}\n                        </List>\n                       \n\n                         <List className=\"result\" header=\"série\" id=\"serie\"  >{searchMediaResult && searchMediaResult.map((result => \n                         result[\"media_type\"] === \"tv\" ?  ( <Link  to={`/media/${result.media_type}/${result.id}`} target=\"_parent\" key={result.id}>\n                             <List.Item className=\"li\">{result.original_name}</List.Item></Link>) : \"\"))}\n                         </List>\n\n \n                         <List className=\"result\"  header=\"acteur\" id=\"actor\"  >{searchMediaResult && searchMediaResult.map((result =>   \n                         result[\"media_type\"] === \"person\" ? (<Link  to={`/media/${result.media_type}/${result.id}`} target=\"_parent\" key={result.id}>\n                             <List.Item className=\"li\">{result.name}</List.Item></Link>) : \"\"))}\n                        </List>\n</div>\n                    </div>\n             </form>\n      \n         </Menu> \n    <List className=\"user\"> \n       <List.Item className=\"t\"> < img src=\"../../../images/star.png\" alt=\"icone d'une étoile jaune\" /></List.Item>\n       <List.Item className=\"t\"> <Link  to=\"/account\" >Mon compte</Link>  </List.Item>\n       <List.Item className=\"t\"> <Link to=\"/\" onClick={logOut}>déconnectez-vous</Link></List.Item>\n    </List>\n       \n</Menu>\n        \n    )\n    \n}\n  \n\n\nexport default Nav;","import { connect } from 'react-redux';\nimport Nav from '../components/Nav';\nimport { logoutSuccess, init } from '../store/reducer/nav-reducer';\n\n\n\nconst mapStateToProps = \n \n(state) => ({\n   loggedout: state.nav.loggedout \n});\n\nconst mapDispatchToProps = (dispatch) => ({\n   onClick: () => {\n        dispatch(logoutSuccess());\n    },\n   init: () => {\n        dispatch(init())\n    }\n  \n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Nav);","import React, { useState, useEffect } from 'react';\nimport {  Link  } from 'react-router-dom';\nimport './index.css';\nimport movieAPI from '../../services/movieAPI';\nimport userAPI from '../../services/userAPI';\nimport Nav from '../../containers/Nav';\n\nconst Home = () => {\n\n\nuserAPI.home();\n// creation of a variable that will contain the data researched\nconst [nowMovie, setNowMovie] = useState([]);\n\n// collect of data by our API movieAPI\n async function movies() { \n    const movie = await movieAPI.nowPlaying()\n    .then(res => {\n        \n        return res.data; \n        \n    })\n    .catch(err => {\n        \n    });\n\n    // setting variable with the datacolected\n    setNowMovie(movie.moviePlaying.results);\n    \n    }\n\n    useEffect(() => {\n    movies();\n    }, []); \n\n\n    return (\n        <div className=\"home\" >\n            \n        <Nav   /> <br/>Films à l'affiche\n        <div className=\"nowmovies\">\n           \n            {nowMovie.map((result) => \n                 <Link className=\"now\" to={`/media/movie/${result.id}`} key={result.id} target=\"_parent\" >\n                            <div  key={result.id}><h4>{result.title}</h4><img src={`https://image.tmdb.org/t/p/w500${result.poster_path}`} alt=\"affiche de film\"/> \n                            </div>\n                 </Link> \n           )}\n            \n        </div>\n        <a target=\"_blank\" href=\"/icons/set/searchlight\" rel=\"noopener noreferrer\">Projecteur icon</a> by <a target=\"_blank\" href=\"https://icones8.fr\" rel=\"noopener noreferrer\">Icons8</a>\n        </div> \n    )\n    \n} \n\nexport default Home;","import React from 'react';\nimport './index.css';\n\nconst Greeting = () => {\n\n\n    return (\n      <div className=\"greet\">\n      <img src=\"https://media.giphy.com/media/3o6ZsU2SMeuAzhwyEo/giphy.gif\" alt=\"gif d'une personne qui dit lumilères caméra action \"/><p>“Powered by Giphy”</p> \n     \n        </div>\n        \n    )\n    \n}\n  \n\n\nexport default Greeting;","import React, {useState} from 'react';\nimport {Link} from 'react-router-dom';\nimport Greeting from '../Greeting';\nimport './index.css';\n\nconst H = () => {\n\n    const [loading, setLoading] = useState(true);\n    \n    setTimeout(function () {\n     setLoading(false);\n   }, 3000);\n   if (loading) {\n          return <Greeting />\n        }\n\nreturn (\n       <div className=\"H\"> \n                    \n                     <h1>Bienvenue </h1> \n                     < img src=\"../../../images/bobine-noir-blanc.png\" alt=\"bobine de film\" />\n                     <Link title=\"inscrivez-vous\" to=\"/signup\">SignUp</Link>\n                     < img src=\"../../../images/bobine.png\" alt=\"bobine de film\"/>\n                     <Link title=\"connectez-vous\" to=\"/login\">login</Link><br/>\n                     <div><a target=\"_blank\" href=\"/icons/set/film-reel\" rel=\"noopener noreferrer\">Bobine de film icon</a> by <a target=\"_blank\" href=\"https://icones8.fr\" rel=\"noopener noreferrer\">Icons8</a></div>\n       \n       </div>\n    )\n    \n} \n\nexport default H;","\nimport validate from 'validate.js';\n\nconst displayError = (props) => {\n    const constraints = {\n           mail: {\n             presence: true,\n             format: {\n               pattern: /^[a-z0-9._-]+@[a-z0-9._-]{2,}\\.[a-z]{2,4}$/,\n               message: \": Format invalide\"\n             }\n           },\n           password: {\n             presence: true,\n             length: {\n               minimum: 8,\n               message: \": Doit contenir 8 caractères\"\n             }\n           },\n           pseudo: {\n             presence: true,\n             length: {\n              minimum: 1000,\n              message: \": Doit contenir 8 caractères\"\n            }\n           }\n       };\n       //result = undefined if input is empty so let error for pseudo\n       const result = validate(props, constraints);\n       if (result)\n       console.log(\"result: \",result);\n   \n      return [result.mail, \" \", result.password];\n  } \n  \n  export default displayError;","import React, { useState } from 'react';\nimport './index.css';\nimport { Redirect, Link } from 'react-router-dom';\nimport  displayError  from '../../lib/validation';\nimport {Button, Input} from 'antd';\n// component = function return element to display\nconst Signup = ({pseudo, mail, password, subscriber, onSubmit, error, init}) => {\n    \n    setTimeout(function () {\n        init();\n    \n      }, 1000);\n\n\n    const [formState, setFormState] = useState({pseudo, mail, password, subscriber});\n    const handleChange = (e) => {\n        const name: string = e.target.name;\n        const value: string = e.target.value;\n        \n        setFormState({...formState, [name]: value}); // name_input : input_value\n        \n       \n            \n    }\n\n   const result = displayError(formState); \n \n\n const handleSubmit = (e) => {\n        e.preventDefault();\n        \n        \n        if (result[0] === undefined && result[2] === undefined) { \n        onSubmit(formState);}\n   \n    }\n\n\n    \n    if(subscriber) return  <Redirect to=\"/login\" />\n     \n   \n\n    return (\n\n        <div className=\"form\">\n\n        <h1>Inscrivez-vous</h1><br/>\n\n         <form onSubmit={handleSubmit} action=\"/signup\" method=\"POST\" >\n          <label htmlFor=\"pseudo\">Pseudo : </label><Input className=\"input\" id=\"pseudo\" name=\"pseudo\" placeholder=\"Entrer votre pseudo\" onChange={handleChange} value={formState.pseudo} required></Input> <br/>\n          <label htmlFor=\"mail\">E-mail : </label><Input className=\"input\" id=\"mail\" name=\"mail\" placeholder=\"Entrer votre e-mail\" onChange={handleChange} value={formState.mail} required></Input> <br/>\n          <label htmlFor=\"password\"> Mot de passe : </label><Input className=\"input\" id=\"password\" name=\"password\" type=\"password\" placeholder=\"Entrer votre mot de passe\" onChange={handleChange} value={formState.password} required></Input> < br/><br/>\n          <Button htmlType=\"submit\" >Valider</Button>\n          <p>  < br/>{result[0]} <br/> {result[2]} {error} <br/>\n            <Link to=\"/login\">Déjà inscrit ?</Link>\n          </p>\n        </form>\n        \n        </div>\n\n    )\n    \n} \n\nexport default Signup;","  \nimport { connect } from 'react-redux';\nimport Signup from '../components/Signup';\nimport { signUp, init } from '../store/reducer/signup-reducer';\n\n\n\nconst mapStateToProps =\n \n(state) => ({\n   pseudo: state.signup.pseudo, \n   mail: state.signup.mail,\n   password: state.signup.password,\n   subscriber: state.signup.subscriber,\n   error: state.signup.error\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n   onSubmit: (formState) => {\n        dispatch(signUp(formState));// transfer input_name value ?\n    },\n    init: () => {\n        dispatch(init())\n    }\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Signup);","import React, { useState} from 'react';\nimport { Redirect, Link} from 'react-router-dom';\nimport {Button, Input} from 'antd';\nimport './index.css';\n\nconst Login = ({pseudo, password, loggedin, subscriber, onSubmit, error, init}) => {\n\n\n setTimeout(function () {\n    init();\n  }, 1000);\n\n \n  const [formState, setFormState] = useState({pseudo, password, loggedin, subscriber});\n \n \n  const handleChange = (e) => {\n      const name: string = e.target.name;\n      const value: string = e.target.value;\n      setFormState({...formState, [name]: value}); // name_input : input_value\n      \n      \n    \n  }\n  const handleSubmit = (e) => {\n        e.preventDefault();\n        \n        const {pseudo,  password, subscriber, loggedin} = formState;\n        onSubmit(formState);\n        \n        \n    }\n    if(loggedin) return <Redirect to=\"/home\" />\n   \n     \n     \n    return (\n\n        <div className=\"form\"> \n\n        <h1>Connectez-Vous</h1>< br/>\n        \n        <form onSubmit={handleSubmit} >\n        <label htmlFor=\"pseudo\">Pseudo :  </label><Input className=\"input\" id=\"pseudo\" name=\"pseudo\" placeholder=\"Entrer votre pseudo\" onChange={handleChange} value={formState.pseudo} required></Input> < br/>< br/>\n        <label htmlFor=\"password\">Mot de passe : </label><Input className=\"input\" id=\"password\" name=\"password\" type=\"password\" placeholder=\"Entrer votre mot de passe\" onChange={handleChange} value={formState.password} required></Input> < br/>< br/>< br/>\n          <Button  htmlType=\"submit\" >Valider</Button>\n          <p>{error}<br/>  \n            <Link to=\"/signup\">Pas encore inscrit ?</Link>\n          </p> \n        </form>\n        \n        </div>\n\n    )\n    \n}\n\nexport default Login;","import { connect } from 'react-redux';\nimport Login from '../components/Login';\nimport { login, init } from '../store/reducer/login-reducer';\n\nconst mapStateToProps =\n (state) => ({\n   pseudo: state.login.pseudo,\n    password: state.login.password,\n    loggedin: state.login.loggedin,\n    subscriber: state.login.subscriber,\n    error: state.login.error\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n    onSubmit: (formState) => {\n        dispatch(login(formState))\n    },\n    init: () => {\n        dispatch(init())\n    }\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);","import React, { useState}  from 'react';\nimport { Redirect, Link  } from 'react-router-dom';\nimport {Popconfirm, message} from 'antd';\nimport './index.css';\n\n\nconst Account = ({display, pseudo, mail, password, date, onClick, init}) => {\n\ndisplay();\nconst [subscriber, setSubscriber] = useState(true);\n\n\ndate = date.slice(0, 10);\n\n\nconst handleDelete = () => {\n  \n        onClick();\n        setSubscriber(false);\n        message.success('Suppression réussie !');\n \n}\n\nconst handleInit = () => {\n    init();\n}\n\nif(!subscriber) { return <Redirect to=\"/\" />}\n\n\n    return (\n\n        <div className=\"account\">\n        <div className=\"info\">\n             < img src=\"../../../images/popcorn.svg\" alt=\"un pot de popcorn\" />\n                <h1>Votre compte</h1>\n             < img src=\"../../../images/popcorn.svg\" alt=\"un pot de popcorn\"/>\n        </div>\n        Pseudo: {pseudo} < br/> \n        adresse mail: {mail} < br/>\n        Date d'inscription: {date} < br/>< br/> < br/> \n          \n        <Link to=\"/updatePseudo\" onClick={handleInit}>Modifier votre pseudo</Link> < br/>\n        <Link to=\"/updateMail\" onClick={handleInit}>Modifier votre adresse mail</Link> < br/>\n        <Link to=\"/updatePassword\" onClick={handleInit}>Modifier votre mot de passe</Link>< br/>\n        <Link to=\"/home\"> Accueil </Link>< br/>< br/>\n       \n        <Popconfirm\n            title=\"Voulez vous vraiment nous quitter ?\"\n            onConfirm={handleDelete}\n            okText=\"Yes\"\n            cancelText=\"No\"\n            className=\"popconfirm\"\n        >\n            \n            <img src=\"https://media.giphy.com/media/dyJ9XHstowFRC/giphy.gif\" alt=\"gif d'un bonhomme de lumière allant vers la sortie\"/>\n            Désinscription\n         </Popconfirm>\n          \n        <p>“Powered by Giphy”</p>\n       \n \n  \n        </div>\n\n    )\n    \n} \n\nexport default Account;","import { connect } from 'react-redux';\nimport Account from '../components/Account';\nimport { displayAccount, init, deleteAccount } from '../store/reducer/account-reducer';\n\n\n\nconst mapStateToProps = \n \n(state) => ({\n   pseudo: state.account.pseudo, \n   mail: state.account.mail,\n   password: state.account.password,\n   date: state.account.date\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  display : () => {\n        dispatch(displayAccount());\n    },\n  init: () => {\n      dispatch(init());\n  },\n  onClick: () => {\n      dispatch(deleteAccount());\n  }\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Account);","import React, { useState } from 'react';\nimport './index.css';\nimport { Redirect, Link } from 'react-router-dom';\nimport {Input} from 'antd';\n// component = function return element to display\nconst Pseudo = ({pseudo, update, error, onSubmit, init}) => {\n    \n    init();\n\n   \n\n    const [formState, setFormState] = useState({pseudo});\n    const handleChange = (e) => {\n        const name: string = e.target.name;\n        const value: string = e.target.value;\n        \n        setFormState({...formState, [name]: value}); // name_input : input_value\n        \n       \n            \n    }\n\n\n const handleSubmit = (e) => {\n        e.preventDefault();\n        \n        onSubmit(formState);\n    \n    }\n\n            if (update) return <Redirect to=\"/account\" />\n     \n   \n\n    return (\n\n        <div className=\"setAccount\">\n        <h1>Modifier votre pseudo</h1>\n        <Link to=\"/account\" className=\"return\">  Retour </Link>\n         <form onSubmit={handleSubmit} action=\"/updatePseudo\" method=\"POST\" >\n          <Input className=\"input\" name=\"pseudo\" placeholder=\"Entrer votre pseudo\" onChange={handleChange} value={formState.pseudo} required></Input>\n         \n          <button  type=\"submit\" >< img src=\"../../../images/clap2.png\" alt=\"un clap de cinéma \" /></button>\n\n          <p> {error}</p>\n\n        </form>\n        \n        </div>\n\n    )\n    \n} \n\nexport default Pseudo;","import { connect } from 'react-redux';\nimport Pseudo from '../components/Pseudo';\nimport {  accountPseudo, init } from '../store/reducer/account-reducer';\n\n\n\nconst mapStateToProps = \n \n(state) => ({\n   pseudo: state.account.pseudo,\n   update: state.account.update,\n   error: state.account.error\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  \n  onSubmit: (formState) => {\n        dispatch(accountPseudo(formState));// transfer input_name value ?\n    },\n  init: () => {\n      dispatch(init());\n  }\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Pseudo);","import validate from 'validate.js';\n\nconst displayError = (props) => {\n    const constraints = {\n           mail: {\n             presence: true,\n             format: {\n               pattern: /^[a-z0-9._-]+@[a-z0-9._-]{2,}\\.[a-z]{2,4}$/,\n               message: \": Format invalide\"\n             }\n           },\n            pseudo: {\n             presence: true,\n             length: {\n              minimum: 1000,\n              message: \": Doit contenir 8 caractères\"\n            }\n           }\n       };\n       //result = undefined if input is empty so let error for pseudo\n       const result = validate(props, constraints);\n       if (result)\n       console.log(\"result: \",result);\n   \n      return [result.mail];\n  } \n  \n  export default displayError;","import React, { useState } from 'react';\nimport './index.css';\nimport { Redirect, Link } from 'react-router-dom';\nimport  displayError  from '../../lib/validationMail';\nimport {Input} from 'antd';\n// component = function return element to display\nconst Mail = ({mail, update, error, onSubmit, init}) => {\n    \n    init();\n\n\n\n    const [formState, setFormState] = useState({mail});\n    const handleChange = (e) => {\n        const name: string = e.target.name;\n        const value: string = e.target.value;\n        \n        setFormState({...formState, [name]: value}); // name_input : input_value\n        \n     \n            \n    }\n\n   const result = displayError(formState); \n\n const handleSubmit = (e) => {\n        e.preventDefault();\n        \n       \n      \n        if (!result[0]) { \n          onSubmit(formState);\n        }\n        \n        \n   \n    }\n\n            if (update) return <Redirect to=\"/account\" />\n     \n   \n\n    return (\n\n        <div className=\"setAccount\">\n        <h1>Modifier votre e-mail</h1>\n        <Link to=\"/account\" className=\"return\"> Retour </Link>\n         <form onSubmit={handleSubmit} action=\"/updateMail\" method=\"POST\" >\n          <Input className=\"input\" name=\"mail\" placeholder=\"Entrer votre mail\" onChange={handleChange} value={formState.mail} required></Input>\n         \n          <button type=\"submit\" >< img src=\"../../../images/clap2.png\" alt=\"un clap de cinéma \" /></button>\n\n          <p> {result}  {error}</p>\n        </form>\n        \n        </div>\n\n    )\n    \n} \n\nexport default Mail;","import { connect } from 'react-redux';\nimport Mail from '../components/Mail';\nimport {  accountMail, init } from '../store/reducer/account-reducer';\n\n\n\nconst mapStateToProps = \n \n(state) => ({\n   mail: state.account.mail,\n   update: state.account.update,\n   error: state.account.error\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  \n  onSubmit: (formState) => {\n        dispatch(accountMail(formState));// transfer input_name value ?\n    },\n  init: () => {\n      dispatch(init());\n  }\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Mail);","import validate from 'validate.js';\n\nconst displayError = (props) => {\n    const constraints = {\n           password: {\n             presence: true,\n             length: {\n               minimum: 8,\n               message: \": Doit contenir 8 caractères\"\n             }\n           }, \n           pseudo: {\n             presence: true,\n             length: {\n              minimum: 1000,\n              message: \": Doit contenir 8 caractères\"\n            }\n           }\n       };\n       //result = undefined if input is empty so let error for pseudo\n       const result = validate(props, constraints);\n       if (result)\n       console.log(\"result: \",result);\n   \n      return [result.password];\n  } \n  \n  export default displayError;","import React, { useState } from 'react';\nimport './index.css';\nimport { Redirect, Link } from 'react-router-dom';\nimport  displayError  from '../../lib/validationPassword';\nimport {Input} from 'antd';\n// component = function return element to display\nconst Password = ({password, update, error, onSubmit, init}) => {\n    \n    init();\n\n    console.log(\"states come from update:\", password, error);\n\n    const [formState, setFormState] = useState({password});\n    const handleChange = (e) => {\n        const name: string = e.target.name;\n        const value: string = e.target.value;\n        \n        setFormState({...formState, [name]: value}); // name_input : input_value\n        \n     \n            \n    }\n\n   const result = displayError(formState); \n\n const handleSubmit = (e) => {\n        e.preventDefault();\n        \n        if (!result[0]) { \n          onSubmit(formState);\n        }\n      \n       \n   \n    }\n\n  \n\n            if (update) return <Redirect to=\"/account\" />\n     \n   \n\n    return (\n\n        <div className=\"setAccount\">\n        <h1>Modifier votre mot de passe</h1>\n        <Link to=\"/account\" className=\"return\"> Retour </Link>\n         <form onSubmit={handleSubmit} action=\"/updatePassword\" method=\"POST\" >\n          <Input className=\"input\" name=\"password\" type=\"password\" placeholder=\"Entrer votre password\" onChange={handleChange} value={formState.password} required></Input>\n         \n          <button type=\"submit\"  >< img src=\"../../../images/clap2.png\" alt=\"clap de cinéma \" /></button>\n\n          <p>  {result} {error}</p>\n        </form>\n       \n        </div>\n\n    )\n    \n} \n\nexport default Password;","import { connect } from 'react-redux';\nimport Password from '../components/Password';\nimport {  accountPassword, init } from '../store/reducer/account-reducer';\n\n\n\nconst mapStateToProps = \n \n(state) => ({\n   password: state.account.password,\n   update: state.account.update,\n   error: state.account.error\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  \n  onSubmit: (formState) => {\n        dispatch(accountPassword(formState));// transfer input_name value ?\n    },\n  init: () => {\n      dispatch(init());\n  }\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Password);","import React from 'react';\nimport { Link} from 'react-router-dom';\nimport './index.css';\n\nconst NotFoundPage = () => {\n\n    return (\n        \n        <div className=\"notFound\" >\n        <p><Link to=\"/home\">Accueil</Link></p>\n        <h1>404 Page Not Found</h1>\n        <img src=\"https://media.giphy.com/media/NnFZysBOEprAA/giphy.gif\" alt=\"gif de projecteur de film tournant\"/>\n        <p>“Powered by Giphy”</p> \n        </div>\n        \n    )\n    \n} \n\nexport default NotFoundPage;","import React, {useState, useEffect} from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport userAPI from '../../services/userAPI';\nimport './index.css';\n\nconst Admin = () => {\n\n    const [users, setUsers] = useState([]);\n    async function usersList() { \n        const list = await userAPI.isAdmin()\n        .then(res => {\n           \n \n            return res.data.users;\n            \n        })\n        .catch(err => {\n\n            \n        });\n\n        setUsers(list);\n    }\n\n\n    const handleDelete = () => {\n    \n       // userAPI.deleteOtherUser();\n    \n}\n        useEffect(() => {\n            usersList();\n            \n            }, []); \n     \n\n            \n            if(users === undefined) {\n                return <Redirect to=\"/forbidden\" />;\n            }\n \n            \n    return (\n        <div className=\"admin\">\n            <h1>Hello admin !</h1> <br/><br/> \n            <p>Liste des abonnés</p>\n             <ul>{users.map((result) => <Link to=\"/admin\" key={result._id} onClick={handleDelete}  >\n                 <li key={result._id}>{result.pseudo} </li></Link>)}\n            </ul>\n            <Link to=\"/home\"> Accueil </Link>\n        </div>\n    )\n}\n\nexport default Admin;","import React from 'react';\nimport './index.css';\n\nconst Load = () => {\n\n  \n    return (\n      <div className=\"load\" >\n        <img src=\"https://media.giphy.com/media/VxbP9tLeKzazm/giphy.gif\" alt=\"gif d'un décompte\"/><p>“Powered by Giphy”</p>\n      </div>\n        \n    )\n    \n}\n  \n\n\nexport default Load;","import React, {useState} from 'react';\nimport './index.css';\nimport {Redirect } from 'react-router-dom';\nconst Forbidden = () => {\n    const [redirect, setRedirect] = useState(false);\n    \n    setTimeout(function () { \n     setRedirect(true);\n   }, 4000);\n   if (redirect) {\n          return <Redirect to=\"/home\" />;\n        }\n    return (\n\n        <div className=\"forbidden\"> <h1>VIP  ONLY !</h1> <br/>\n        <img src=\"https://media.giphy.com/media/Qak0pFjTzg16g0mcxt/giphy.gif\" alt=\"gif d'une salle de cinéma vide avec à l'écran king-kong\"/><br/>\n        <p>“Powered by Giphy” add and the Giphy logo</p>\n        </div>\n        \n    )\n    \n} \n\nexport default Forbidden;","import React, { useState, useEffect }  from 'react';\nimport {Link} from 'react-router-dom';\nimport movieAPI from '../../services/movieAPI';\nimport './index.css';\nimport { Card } from 'antd';\n\nconst Media = (props) => {\n\nconst [medias, setMedias] = useState([]);\n\n    let media = props.match.params.media; \n    let id = props.match.params.id;\n\n \n\n    async function mediaDetails() { \n\n       const details = await movieAPI.media(media,id)\n       .then(res => {\n          \n           return res.data;\n           \n       })\n       .catch(err => {\n          \n       });\n       setMedias(details.mediaDetails);\n       \n       }\n   \n       useEffect(() => {\n       mediaDetails();\n       }, []); \n\n\n\n\n    return (\n\n        <div className=\"media\" style={{backgroundImage:`url()`, backgroundSize: 'cover'}}> \n            <p><Link to=\"/home\">Accueil</Link></p><p><a href=\"javascript:history.go(-1)\">Retour</a></p>\n            <h1>Média </h1>\n            \n            <Card > \n            <Card.Grid className=\" m\"><img src={medias[\"profile_path\"] ? `https://image.tmdb.org/t/p/w500/${medias[\"profile_path\"]}` : `https://image.tmdb.org/t/p/w500/${medias[\"backdrop_path\"]}`} alt=\"du média sélectionné\"/>\n            </Card.Grid>\n            <p>  {medias[\"name\"]? medias[\"name\"] : medias[\"title\"]} {medias[\"release_date\"] ? medias[\"release_date\"] : \"\"} <br/> <br/> {medias[\"biography\"] ? medias[\"biography\"]: medias[\"overview\"] } </p>\n        </Card >\n    </div> \n    )\n    \n} \n\nexport default Media;","import React, {useState, useEffect} from 'react';\nimport {Link} from 'react-router-dom';\nimport './index.css';\nimport movieAPI from '../../services/movieAPI';\nimport { Card, Pagination, BackTop } from 'antd';\n\nconst Genres = (props) => {\n\n\n  const [movies, setMovies] = useState([]);\n  const [genre, setGenre] = useState([]);\n  const [pages, setPages] = useState();\n  const [page, setPage] = useState(1);\n   \n\n/*------------------movie genre------------------------*/\n\nasync function listOfGenres() { \n       const listGenres = await movieAPI.genres()\n       .then(res => {\n           \n           return res.data;\n       })\n       .catch(err => {\n         \n       });\n       setGenre(listGenres.genres.genres);\n      \n       }\n\n/*------------------movies by genre list------------------------*/\n\n    let id = props.match.params.id;\n\n    async function moviesByGenreList() { \n\n       const genreMovies = await movieAPI.moviesByGenres(id,page)\n       .then(res => {\n           \n           return res.data;\n           \n       })\n       .catch(err => {\n          \n       });\n       setMovies(genreMovies.moviesGenre.results);\n       setPages(genreMovies.moviesGenre.total_pages);\n      \n       }\n   \n       useEffect(() => {\n       listOfGenres();  \n       }, []); \n\n       useEffect(() => {\n       moviesByGenreList();\n       }, [page]); \n\n    \n\n  \n   \n     const onChange = page => {\n     \n      setPage( page);\n    };\n\n   const { Meta } = Card;\n  \n\n\n\n    return (\n      <div className=\"genreMovie\">\n      <div className=\"acc\"><Link to=\"/home\">Accueil</Link> </div>\n\n      <Card title={genre.map((result)=> (result.id != id) ? \"\" : result.name)} className=\"card\" >\n      {movies.map((result) => \n             \n          <Link  to={`/media/movie/${result.id}`} target=\"_parent\" key={result.id}>\n\n              <Card.Grid className=\"grid\" key={result.id}>\n                <img src={`https://image.tmdb.org/t/p/w500${result.poster_path}`} alt=\"affiche de film\" />\n                <Meta title={result.title}/>\n              </Card.Grid>\n\n          </Link>)}\n          </Card>\n         <div className=\"pagination\"><Pagination className=\"pagination\" current={page} total={pages} onChange={onChange} /></div>\n         <BackTop>\n           <div className=\"up\">UP</div>\n         </BackTop>\n      </div>\n        \n    )\n    \n}\n  \n\n\nexport default Genres;","import React, {useState, useEffect} from 'react';\nimport {Link} from 'react-router-dom';\nimport './index.css';\nimport movieAPI from '../../services/movieAPI';\nimport { Card, Pagination, BackTop } from 'antd';\n\nconst GenresTv = (props) => {\n\n// creation of a variables that will contain the data researched\n\n  const [tvShows, setTvShows] = useState([]);\n  const [genreTv, setGenreTv] = useState([]);\n  const [pages, setPages] = useState();\n  const [page, setPage] = useState(1);\n\n\n/*------------------tv shows genres------------------------*/\n// collect of data by our API movieAPI\n    async function listOfTvGenres() { \n     const listGenres = await movieAPI.genresTv()\n     .then(res => {\n         \n         return res.data;\n     })\n     .catch(err => {\n         \n     });\n\n     // setting variable with the datacolected\n     setGenreTv(listGenres.genres.genres);\n     \n     }\n\n    \n    \n/*------------------tv shows by genre list------------------------*/\n  \n    let id = props.match.params.id;\n\n    async function tvShowsByGenreList() { \n       const genreTvShows = await movieAPI.tvShowsByGenres(id,page)\n       .then(res => {\n           \n           return res.data;\n           \n       })\n       .catch(err => {\n           \n       });\n       setTvShows(genreTvShows.tvShowGenre.results);\n       setPages(genreTvShows.tvShowGenre.total_pages);\n       \n       }\n\n      useEffect(() => {\n      listOfTvGenres(); \n       }, []); \n\n       useEffect(() => {\n       tvShowsByGenreList();\n       }, [page]); \n\n\n\n   const onChange = page => {\n    \n    setPage( page);\n  };\n   \n   const { Meta } = Card;\n  \n    return (\n      <div className=\"genresTv\">\n         <div className=\"acc\"><Link to=\"/home\">Accueil</Link> </div>\n  \n      <Card title ={genreTv.map((result)=> (result.id != id) ? \"\" : result.name)} className=\"card\">\n      {tvShows.map((result) => \n        <Link  to={`/media/tv/${result.id}`} target=\"_parent\" key={result.id}>\n      \n          <Card.Grid className=\"grid\" key={result.id}>\n             <img src={`https://image.tmdb.org/t/p/w500${result.poster_path}`} alt=\"affiche de série\"/>\n             <Meta title={result.name}/> \n          </Card.Grid>\n        </Link>)} \n        </Card>\n        <div className=\"paginations\"><Pagination  current={page} total={pages} onChange={onChange} /></div>\n        <BackTop>\n           <div className=\"up\">UP</div>\n         </BackTop>\n        </div>\n        \n    )\n    \n}\n  \n\n\nexport default GenresTv;","import React from 'react';\nimport { Link} from 'react-router-dom';\nimport './index.css';\n\n\nconst Mentions = () => {\n\n\n\n    return (\n\n            <div className=\"mentions\">\n\n<Link to=\"/home\"><p>Accueil</p></Link>\n<p >MENTIONS LEGALES :</p>\n\n<p >Conformément aux dispositions des articles 6-III et 19 de la Loi n° 2004-575 du 21 juin 2004 pour la Confiance dans l'économie numérique, dite L.C.E.N., nous portons à la connaissance des utilisateurs et visiteurs du site : <a href=\"http://www.melimendy.me/to-watch\" target=\"_blank\" rel=\"noopener noreferrer\" >www.melimendy.me/to-watch</a> les informations suivantes :</p>\n\n<p ><strong>1. Informations légales :</strong></p>\n\n<p >Statut du propriétaire : <strong>particulier</strong><br />\nLe Propriétaire est : <strong>Mélinda MENDY</strong><br />\nAdresse postale du propriétaire : <strong></strong><br />\n <br />\nLe Créateur du site est : <strong>Mélinda MENDY</strong><br />\nLe Responsable de la  publication est : <strong>Mélinda MENDY</strong><br />\nContacter le responsable de la publication : <strong>melinda93@hotmail.fr</strong><br />\nLe responsable de la publication est une<strong> personne physique</strong><br />\n<br />\nLe Webmaster est  : <strong>Mélinda MENDY</strong><br />\nContacter le Webmaster :  <strong><a href=\"mailto:melinda93@hotmail.fr?subject=Contact a partir des mentions lÃ©gales via le site www.melimendy.me/to-watch\">melinda93@hotmail.fr</a></strong><br />\nL’hebergeur du site est : <strong>www.melimendy.me </strong><br />\n<strong><u>CREDIT :</u> </strong> Les mentions légales ont étés générées par<strong> <a href=\"https://www.generer-mentions-legales.com/generateur-mentions-legales.html\" target=\"_blank\"rel=\"noopener noreferrer\" >générateur de mentions legales</a></strong><br />\nUne eau toujours potable avec les <strong><a href=\"https://www.chamarrel.com/perles-de-ceramique-em-pxl-29_37.html\">perles de céramique</a></strong></p>\n\n<p > </p>\n\n<p ><strong>2. Présentation et principe :</strong></p>\n\n<p >Est désigné ci-après : <strong>Utilisateur</strong>, tout internaute se connectant et utilisant le site susnommé : <a href=\"http://www.melimendy.me/to-watch\" target=\"_blank\" rel=\"noopener noreferrer\" >www.melimendy.me/to-watch</a>.<br />\nLe site <strong>www.melimendy.me/to-watch</strong><strong> </strong>regroupe un ensemble de services, dans l'état,  mis à la disposition des utilisateurs. Il est ici précisé que ces derniers doivent rester courtois et faire preuve de bonne foi tant envers les autres utilisateurs qu'envers le webmaster du site www.melimendy.me/to-watch. Le site www.melimendy.me/to-watch est mis à jour régulièrement par Mélinda MENDY.<br />\nMélinda MENDY s’efforce de fournir sur le site www.melimendy.me/to-watch des informations les plus précises possibles (sous réserve de modifications apportées depuis leur mise en ligne), mais ne saurait garantir l'exactitude, la complétude et l'actualité des informations diffusées sur son site, qu’elles soient de son fait ou du fait des tiers partenaires qui lui fournissent ces informations. En conséquence, l'utilisateur reconnaît utiliser ces informations données (à titre indicatif, non exhaustives et susceptibles d'évoluer) sous sa responsabilité exclusive.</p>\n\n<p > </p>\n\n<p ><strong>3. Accessibilité :</strong><br />\n<br />\nLe site www.melimendy.me/to-watch est par principe accessible aux utilisateurs 24/24h, 7/7j, sauf interruption, programmée ou non, pour les besoins de sa maintenance ou en cas de force majeure. En cas d’impossibilité d’accès au service, www.melimendy.me/to-watch s’engage à faire son maximum afin de rétablir l’accès au service et s’efforcera alors de communiquer préalablement aux utilisateurs les dates et heures de l’intervention.  N’étant soumis qu’à une obligation de moyen, www.melimendy.me/to-watch ne saurait être tenu pour responsable de tout dommage, quelle qu’en soit la nature, résultant d’une indisponibilité du service.</p>\n\n<p > </p>\n\n<p ><strong>4. Propriété intellectuelle :</strong></p>\n\n<p ><br />\nMélinda MENDY est propriétaire exclusif de tous les droits de propriété intellectuelle ou détient les droits d’usage sur tous les éléments accessibles sur le site, tant sur la structure que sur les textes, images, graphismes, logo, icônes, sons, logiciels… (sauf ceux signalés).<br />\nToute reproduction totale ou partielle du site www.melimendy.me/to-watch, représentation, modification, publication, adaptation totale ou partielle de l'un quelconque de ces éléments, quel que soit le moyen ou le procédé utilisé, est interdite, sauf autorisation écrite préalable de Mélinda MENDY, propriétaire du site à l'email : melinda93@hotmail.fr, à défaut elle sera considérée comme constitutive d’une contrefaçon et passible de poursuite conformément aux dispositions des articles L.335-2 et suivants du Code de Propriété Intellectuelle.</p>\n\n<p ><br />\n<strong>5. Liens hypertextes et cookies :</strong><br />\n<br />\nLe site www.melimendy.me/to-watch contient un certain nombre de liens hypertextes vers d’autres sites (partenaires, informations …) mis en place avec l’autorisation de Mélinda MENDY. Cependant, Mélinda MENDY n’a pas la possibilité de vérifier l'ensemble du contenu des sites ainsi visités et décline donc toute responsabilité de ce fait quand aux risques éventuels de contenus illicites.<br />\nL’utilisateur est informé que lors de ses visites sur le site www.melimendy.me/to-watch, un ou des cookies sont susceptibles de s’installer automatiquement sur son ordinateur par l'intermédiaire de son logiciel de navigation. Un cookie est un bloc de données qui ne permet pas d'identifier l'utilisateur, mais qui enregistre des informations relatives à la navigation de celui-ci sur le site. <br />\nLe paramétrage du logiciel de navigation permet d’informer de la présence de cookie et éventuellement, de la refuser de la manière décrite à l’adresse suivante : <a href=\"http://www.cnil.fr\">www.cnil.fr</a>. L’utilisateur peut toutefois configurer le navigateur de son ordinateur pour refuser l’installation des cookies, sachant que le refus d'installation d'un cookie peut entraîner l’impossibilité d’accéder à certains services. Pour tout bloquage des cookies, tapez dans votre moteur de recherche : bloquage des cookies sous IE ou firefox et suivez les instructions en fonction de votre version.</p>\n\n<p ><br />\n<strong>6. Protection des biens et des personnes - gestion des données personnelles :</strong><br />\n<br />\nEn France, les données personnelles sont notamment protégées par la loi n° 78-87 du 6 janvier 1978, la loi n° 2004-801 du 6 août 2004, l'article L. 226-13 du Code pénal et la Directive Européenne du 24 octobre 1995.</p>\n\n<p >Sur le site www.melimendy.me/to-watch, Mélinda MENDY ne collecte des informations personnelles ( suivant l'article 4 loi n°78-17 du 06 janvier 1978) relatives à l'utilisateur que pour le besoin de certains services proposés par le site www.melimendy.me/to-watch. L'utilisateur fournit ces informations en toute connaissance de cause, notamment lorsqu'il procède par lui-même à leur saisie. Il est alors précisé à l'utilisateur du site www.melimendy.me/to-watch l’obligation ou non de fournir ces informations.<br />\nConformément aux dispositions des articles 38 et suivants de la loi 78-17 du 6 janvier 1978 relative à l’informatique, aux fichiers et aux libertés, tout utilisateur dispose d’un droit d’accès, de rectification, de suppression et d’opposition aux données personnelles le concernant. Pour l’exercer, adressez votre demande à www.melimendy.me/to-watch par email : <strong><a href=\"mailto:melinda93@hotmail.fr?subject=Contact ï¿½ partir des mentions lï¿½gales via le site www.melimendy.me/to-watch\">melinda93@hotmail.fr</a></strong> ou par écrit dûment signée, accompagnée d’une copie du titre d’identité avec signature du titulaire de la pièce, en précisant l’adresse à laquelle la réponse doit être envoyée.</p>\n\n<p >Aucune information personnelle de l'utilisateur du site www.melimendy.me/to-watch n'est publiée à l'insu de l'utilisateur, échangée, transférée, cédée ou vendue sur un support quelconque à des tiers. Seule l'hypothèse du rachat du site www.melimendy.me/to-watch et de ses droits autorise Mélinda MENDY à transmettre les dites informations à l'éventuel acquéreur qui serait à son tour tenu à la même obligation de conservation et de modification des données vis à vis de l'utilisateur du site www.melimendy.me/to-watch.<br />\nLe site www.melimendy.me/to-watch est en conformité avec le RGPD voir notre politique RGPD  A venir.</p>\n\n<p >Les bases de données sont protégées par les dispositions de la loi du 1er juillet 1998 transposant la directive 96/9 du 11 mars 1996 relative à la protection juridique des bases de données.</p>\n\n\n            </div>\n\n\n\n    )\n\n}\n\nexport default Mentions;","import React from 'react';\nimport { Route,  Redirect } from 'react-router-dom';\nimport userAPI from '../../services/userAPI';\n\nconst PrivateRoute = ({ component: Component, ...rest }) => (\n  <Route\n    {...rest} //contains the React Router props when the initial component is rendered\n    render={(props) => {\n      if (userAPI.isAuth()) {\n        return <Component {...props} />;\n      }\n        else {\n        return <Redirect to=\"/\" />;\n      }\n    }}\n  />\n);\n\nexport default PrivateRoute;","import React from 'react';\nimport { Route,  Redirect } from 'react-router-dom';\nimport userAPI from '../../services/userAPI';\n\nconst PublicRoute = ({ component: Component, ...rest }) => (\n  <Route\n    {...rest} //contains the React Router props when the initial component is rendered\n    render={(props) => {\n      if (userAPI.isAuth()) {\n        return <Redirect to=\"/home\" />;\n      }\n        else {\n        return <Component {...props} />;\n      }\n    }}\n  />\n);\n\nexport default PublicRoute;","import React, { useState } from 'react';\nimport { Route, Switch, Redirect, Link} from 'react-router-dom';\nimport userAPI from '../../services/userAPI';\nimport './index.css';\n\nimport Home from '../Home';\nimport H from '../H';\nimport Signup from '../../containers/Signup';\nimport Login from '../../containers/Login';\nimport Account from '../../containers/Account';\nimport Pseudo from '../../containers/Pseudo';\nimport Mail from '../../containers/Mail';\nimport Password from '../../containers/Password';\nimport NotFoundPage from '../NotFoundPage';\nimport Admin from '../Admin';\nimport Load from '../Load';\nimport Forbidden from '../Forbidden';\nimport Media from '../Media';\nimport Genre from '../Genre';\nimport GenreTv from '../GenreTv';\nimport Mentions from '../Mentions';\nimport PrivateRoute from '../PrivateRoute';\nimport PublicRoute from '../PublicRoute';\n\nconst App = () => {\n  userAPI.index();\n\n  const [loading, setLoading] = useState(true);\n    \n     setTimeout(function () {\n      setLoading(false);\n    }, 1000);\n    if (loading) {\n           return <Load />\n         }\n   \n  return (\n     \n    <div className=\"app\" >\n     <header><p className=\"title\">To Watch </p></header>\n     \n      <Switch>\n                \n                <Route path=\"/\" exact component={H} />\n                <PrivateRoute  path=\"/home\" exact component={Home} />\n                <PrivateRoute path=\"/account\"exact  component={Account} />\n                <PrivateRoute path=\"/updatePseudo\" exact component={Pseudo} />\n                <PrivateRoute path=\"/updateMail\" component={Mail} />\n                <PrivateRoute path=\"/updatePassword\" exact component={Password} />\n                <PrivateRoute path=\"/media/:media/:id\" exact  component={Media} />\n                <PrivateRoute path=\"/genre/:id\" exact component={Genre} />\n                <PrivateRoute path=\"/genretv/:id\" exact component={GenreTv} />\n                <PrivateRoute path=\"/mentions\" exact component={Mentions} />\n                <PrivateRoute path=\"/forbidden\" exact  component={Forbidden} />\n                <PublicRoute path=\"/signup\" exact  component={Signup} />\n                <PublicRoute path=\"/login\" exact  component={Login}/>\n                <PrivateRoute path=\"/admin\" exact component={Admin}/>\n                <Route path=\"/404\" component={NotFoundPage} />\n                    <Redirect to=\"/404\" />\n            </Switch> \n      <footer><p><Link to=\"/mentions\">Mentions Légales</Link></p></footer>   \n    </div>\n    \n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport store from './store';\n\nimport './index.css';\nimport App from '../src/components/App';\nimport * as serviceWorker from './serviceWorker';\n\nconst ComponentToRender = () => (\n    <Provider store={store}>\n        <Router>\n            <App />\n        </Router>\n    </Provider>\n    \n);\nReactDOM.render(<ComponentToRender />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}